" Treat <li> and <p> tags like the block tags they are
let g:html_indent_tags = 'li\|p'

"File nav
if executable('ag')
  set grepprg=ag\ --vimgrep
  set grepformat=%f:%l:%c%m

  "populate quickfix with \
  command! -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
  nnoremap \ :Ag<space>
endif

let g:ragtag_global_maps = 1

" Emmet
" Dont let it override <C-y>
let g:user_emmet_leader_key = '<C-e>'

" Remove backward jump interference
inoremap <c-x><c-k> <c-x><c-k>


"Vim-Go
let g:go_def_mode='gopls'
let g:go_info_mode='gopls'


" 'matchit.vim' is built-in so let's enable it!
" " Hit '%' on 'if' to jump to 'else'.
runtime macros/matchit.vim

" Strip whitespace
autocmd BufWritePre * %s/\s\+$//e

" Return cursor to original position
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
  \| exe "normal g'\"" | endif
endif
"}}}

"Colorscheme / appearance
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

"Status line
set laststatus=2
set statusline=
set statusline+=\ %<%F\ %m\ %r\ %h\ %=%=%=%y\ [%c]%=

" Shelf this for later
if has("nvim-0.5")
  source $HOME/.vim/init.lua
endif
"}}}

